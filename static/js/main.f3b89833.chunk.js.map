{"version":3,"sources":["reducers/portfolio-reducer.ts","components/Portfolio.tsx","components/Header.tsx","api/coincap-api.ts","reducers/main-reducer.ts","components/helpers/transformation.helper.ts","components/helpers/pagination.helper.ts","components/Modal.tsx","components/Main.tsx","components/Footer.tsx","reducers/details-reducer.ts","components/LineChart.tsx","components/CoinDetails.tsx","App.tsx","reportWebVitals.ts","store.ts","index.tsx"],"names":["initialState","data","getDataTC","dispatch","localStorage","getItem","type","setDataAC","JSON","parse","Portfolio","props","toggle","useSelector","state","portfolio","useDispatch","columns","title","dataIndex","key","render","a","record","className","onClick","handleClick","useEffect","newData","filter","item","setItem","stringify","removeCoinTC","dataSource","size","pagination","Header","useState","isOpened","setIsOpened","coinsCollection","main","popular","slice","map","symbol","priceUsd","toFixed","id","total","reduce","acc","cur","instance","axios","create","baseURL","coincapAPI","params","get","getCoinsCollectionTC","then","resolve","catch","e","console","log","transformationHelper","num","PaginationHelper","onChangePage","itemsPerPage","current","currentPage","hideOnSinglePage","showSizeChanger","position","onChange","page","pageSize","Modal","currentCoin","amount","setAmount","setTotal","name","price","step","min","target","value","substring","sum","coin","newCoin","rank","marketCap","vwap","supply","volume","change","dataCopy","find","addCoinTC","Main","setCurrentPage","isClicked","setIsClicked","setCurrentCoin","history","useHistory","marketCapUsd","vwap24Hr","volumeUsd24Hr","changePercent24Hr","timerId","setInterval","clearInterval","limit","offset","newParams","reloadCollection","length","onRow","onDoubleClick","push","Footer","href","rel","coinDetails","coinPoints","getCoinDetailsTC","getCoinPointsTC","LineChart","coinPrice","labels","datasets","label","fill","backgroundColor","borderColor","CoinDetails","coinId","details","maxSupply","explorer","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3b89833.chunk.js","sourcesContent":["import { Dispatch } from \"redux\"\r\nimport { ThunkDispatch } from \"redux-thunk\"\r\nimport { AppActionsType, AppRootStateType } from \"../store\"\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type PortfolioActionType = ReturnType<typeof setDataAC>\r\n\r\nlet initialState = {\r\n  data: [] as any\r\n}\r\n\r\nexport const portfolioReducer = (state = initialState, action: PortfolioActionType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'COINCAP/SET-DATA': {\r\n      return {...state, data: action.data}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst setDataAC = (data: any) => ({type: 'COINCAP/SET-DATA', data} as const)\r\n\r\nexport const getDataTC = () => (dispatch: Dispatch) => {\r\n  const data = localStorage.getItem('portfolio')\r\n  data && dispatch(setDataAC(JSON.parse(data)))\r\n}\r\n\r\nexport const addCoinTC = (coin: any, amount: string, total: number) => (dispatch: Dispatch) => {\r\n  const data = localStorage.getItem('portfolio')\r\n  const newCoin = {\r\n    key: coin.key,\r\n    rank: coin.rank,\r\n    name: coin.name,\r\n    price: coin.price,\r\n    marketCap: coin.marketCap,\r\n    vwap: coin.vwap,\r\n    supply: coin.supply,\r\n    volume: coin.volume,\r\n    change: coin.change,\r\n    symbol: coin.symbol,\r\n    amount: +amount,\r\n    total: total.toFixed(2)\r\n  }\r\n  if (data) {\r\n    let dataCopy = JSON.parse(data)\r\n    const coin = dataCopy.find((item: any) => item.name === newCoin.name)\r\n    if (coin) {\r\n      dataCopy = dataCopy.filter((item: any) => item.name !== coin.name)\r\n      const newData = JSON.stringify([newCoin, ...dataCopy])\r\n      localStorage.setItem('portfolio', newData)\r\n    } else {\r\n      const newData = JSON.stringify([newCoin, ...JSON.parse(data)])\r\n      localStorage.setItem('portfolio', newData)\r\n    }\r\n  } else {\r\n    const newData = JSON.stringify([newCoin])\r\n    localStorage.setItem('portfolio', newData)\r\n  }\r\n}\r\n\r\nexport const removeCoinTC = (key: string) => (dispatch: ThunkDispatch<AppRootStateType, null, AppActionsType>) => {\r\n  const data = localStorage.getItem('portfolio')\r\n  if (data) {\r\n    const newData = JSON.parse(data).filter((item: any) => item.key !== key)\r\n    localStorage.setItem('portfolio', JSON.stringify(newData))\r\n  }\r\n  dispatch(getDataTC())\r\n}\r\n","import { Table } from 'antd'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getDataTC, removeCoinTC } from '../reducers/portfolio-reducer'\r\nimport { AppRootStateType } from '../store'\r\n\r\ntype PropsType = {\r\n    toggle: () => void\r\n}\r\n\r\nexport const Portfolio: React.FC<PropsType> = (props) => {\r\n  const {toggle} = props\r\n  const data = useSelector<AppRootStateType, any[]>(state => state.portfolio.data)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    },\r\n    {\r\n      title: 'Market Cap',\r\n      dataIndex: 'marketCap',\r\n      key: 'marketCap',\r\n    },\r\n    {\r\n      title: 'VWAP (24Hr)',\r\n      dataIndex: 'vwap',\r\n      key: 'vwap',\r\n    },\r\n    {\r\n      title: 'Supply',\r\n      dataIndex: 'supply',\r\n      key: 'supply',\r\n    },\r\n    {\r\n      title: 'Volume (24Hr)',\r\n      dataIndex: 'volume',\r\n      key: 'volume',\r\n    },\r\n    {\r\n      title: 'Change (24Hr)',\r\n      dataIndex: 'change',\r\n      key: 'change',\r\n    },\r\n    {\r\n      title: 'Amount',\r\n      dataIndex: 'amount',\r\n      key: 'amount',\r\n    },\r\n    {\r\n      title: 'Total ($)',\r\n      dataIndex: 'total',\r\n      key: 'total',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      render: (a: any, record: any) => <button className=\"portfolio__remove\" key={record.key} onClick={() => handleClick(record.key)}>×</button>\r\n    },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    dispatch(getDataTC())\r\n  }, [dispatch])\r\n\r\n  const handleClick = (key: string) => {\r\n    dispatch(removeCoinTC(key))\r\n  }\r\n\r\n  return (\r\n  <div className=\"portfolio\">\r\n    <div className=\"portfolio__container\">\r\n      <p className=\"portfolio__title\">Portfolio</p>\r\n      <Table columns={columns} dataSource={data} size=\"small\" pagination={false}/>\r\n      <button className=\"portfolio__cancel\" onClick={toggle}>Cancel</button>\r\n    </div>\r\n  </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { CoinType } from '../api/coincap-api'\r\nimport { AppRootStateType } from '../store'\r\nimport { Portfolio } from './Portfolio'\r\n\r\nexport const Header: React.FC = () => {\r\n  const [isOpened, setIsOpened] = useState<boolean>(false)\r\n  const coinsCollection = useSelector<AppRootStateType, CoinType[]>(state => state.main.coinsCollection)\r\n  const data = localStorage.getItem('portfolio')\r\n  const popular = coinsCollection.slice(0, 3)\r\n\r\n  const toggle = () => {\r\n    setIsOpened(!isOpened)\r\n  }\r\n\r\n  const getUserPortfolioCost = () => {\r\n    if (data) {\r\n      const costCollection = JSON.parse(data).map((item: any) => {\r\n        return +item.total\r\n      })\r\n      const sum = costCollection.reduce((acc: number, cur: number) => acc + cur, 0)\r\n      return sum.toFixed(2)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  return (\r\n  <div className=\"header\">\r\n    <div className=\"app__container\">\r\n      <div className=\"header__container\">\r\n        <div className=\"header__popular\">\r\n          {popular.map(item => {\r\n            return (\r\n              <div key={item.id}>\r\n                <span>{item.symbol}</span>\r\n                <span className=\"header__popular_price\">{'$' + (+item.priceUsd).toFixed(2)}</span>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n        <div className=\"header__portfolio_wrapper\">\r\n          <span>(${getUserPortfolioCost()})</span>\r\n          <button className=\"header__portfolio\" onClick={toggle}></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    {isOpened && <Portfolio toggle={toggle} />}\r\n  </div>\r\n  )\r\n}","import axios from 'axios'\r\n\r\ntype CollectionType = {\r\n  data: CoinType[]\r\n  timestamp: number\r\n}\r\n\r\ntype DetailsType = {\r\n  data: CoinType\r\n  timestamp: number\r\n}\r\n\r\ntype PointsType = {\r\n  data: DataPointsType[]\r\n  timestamp: number\r\n}\r\n\r\nexport type CoinType = {\r\n  id: string\r\n  rank: string\r\n  symbol: string\r\n  name: string\r\n  supply: string\r\n  maxSupply: string\r\n  marketCapUsd: string\r\n  volumeUsd24Hr: string\r\n  priceUsd: string\r\n  changePercent24Hr: string\r\n  vwap24Hr: string\r\n  explorer: string\r\n}\r\n\r\nexport type ParamsType = {\r\n  limit: number\r\n  offset: number\r\n}\r\n\r\nexport type DataPointsType = {\r\n  circulatingSupply: string\r\n  date: string\r\n  priceUsd: string\r\n  time: number\r\n}\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.coincap.io/v2',\r\n })\r\n\r\nexport const coincapAPI = {\r\n  getCoinsCollection(params: any) {\r\n    return instance.get<CollectionType>('/assets', params)\r\n  },\r\n  getCoinDetails(id: string) {\r\n    return instance.get<DetailsType>(`/assets/${id}`)\r\n  },\r\n  getCoinPoints(id: string) {\r\n    return instance.get<PointsType>(`/assets/${id}/history?interval=h1`)\r\n  }\r\n}\r\n\r\n ","import { Dispatch } from \"redux\"\r\nimport { coincapAPI, CoinType, ParamsType } from \"../api/coincap-api\"\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type MainActionType = ReturnType<typeof createCoinsCollectionAC>\r\n\r\nlet initialState = {\r\n  coinsCollection: [] as Array<CoinType>\r\n}\r\n\r\nexport const mainReducer = (state = initialState, action: MainActionType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'COINCAP/SET-COINS-COLLECTION': {\r\n      return {...state, coinsCollection: action.data}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst createCoinsCollectionAC = (data: CoinType[]) => ({type: 'COINCAP/SET-COINS-COLLECTION', data} as const)\r\n\r\nexport const getCoinsCollectionTC = (params?: ParamsType) => (dispatch: Dispatch) => {\r\n  coincapAPI.getCoinsCollection(params)\r\n    .then(resolve => {\r\n      dispatch(createCoinsCollectionAC(resolve.data.data))\r\n    })\r\n    .catch((e) => {\r\n      console.log(e)\r\n    })\r\n}","export const transformationHelper = (num: number) => {\r\n  if (num >= 1000000000000) {\r\n    return (num / 1000000000000).toFixed(2) + 't'\r\n  } else if (num >= 1000000000) {\r\n    return (num / 1000000000).toFixed(2) + 'b'\r\n  } else if (num >= 1000000) {\r\n    return (num / 1000000).toFixed(2) + 'm'\r\n  } else if (num >= 1000) {\r\n    return (num / 1000).toFixed(2) + 'k'\r\n  } else {\r\n    return num.toFixed(2)\r\n  }\r\n}","import { TablePaginationConfig } from 'antd';\r\n\r\ntype GetListsPaginationType = (\r\n  onChangePage: (limit: number, offset: number, page: number) => void,\r\n  itemsPerPage: number,\r\n  total?: number,\r\n  current?: number\r\n) => TablePaginationConfig | false;\r\n\r\nconst getListsPagination: GetListsPaginationType = (\r\n  onChangePage: (limit: number, offset: number, page: number) => void,\r\n  itemsPerPage: any,\r\n  total: any,\r\n  current: any\r\n) => {\r\n  const currentPage = current ? { current } : {};\r\n\r\n  return total && total > itemsPerPage\r\n    ? {\r\n        ...currentPage,\r\n        hideOnSinglePage: true,\r\n        showSizeChanger: false,\r\n        position: ['bottomRight'],\r\n        onChange: (page) => onChangePage(itemsPerPage, itemsPerPage * (page - 1), page),\r\n        pageSize: itemsPerPage,\r\n        total,\r\n      }\r\n    : false;\r\n};\r\n\r\nexport const PaginationHelper = { getListsPagination };","import { Button, Input } from 'antd'\r\nimport React, { ChangeEvent, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addCoinTC } from '../reducers/portfolio-reducer'\r\n\r\ntype PropsType = {\r\n  currentCoin: any\r\n  toggle: () => void\r\n}\r\n\r\nexport const Modal: React.FC<PropsType> = (props) => {\r\n  const { currentCoin, toggle } = props\r\n  const [amount, setAmount] = useState<string>('')\r\n  const [total, setTotal] = useState<number>(0)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const sum = (amount: string) => {\r\n    const total = +amount * +(currentCoin.price.substring(1))\r\n    setTotal(total)\r\n  }\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setAmount(e.target.value)\r\n    sum(e.target.value)\r\n  }\r\n\r\n  const handleClick = () => {\r\n    dispatch(addCoinTC(currentCoin, amount, total))\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal__container\">\r\n        <div className=\"modal__name\">{currentCoin.name} ({currentCoin.symbol})</div>\r\n        <div className=\"modal__description\">Price: {currentCoin.price}</div>\r\n        <div className=\"modal__description\">\r\n          <span>Amount:</span>\r\n          <Input type='number' step='0.1' min='0' onChange={handleChange} />\r\n        </div>\r\n        <div className=\"modal__description\">Total: ${total.toFixed(2)}</div>\r\n        <div className=\"modal__btns\">\r\n          <Button className=\"modal__cancel_btn\" onClick={toggle}>Cancel</Button>\r\n          <Button className=\"modal__add_btn\" onClick={handleClick}>Add</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Button, Table } from 'antd'\r\nimport { getCoinsCollectionTC } from '../reducers/main-reducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppRootStateType } from '../store'\r\nimport { CoinType } from '../api/coincap-api'\r\nimport { transformationHelper } from './helpers/transformation.helper'\r\nimport { PaginationHelper } from './helpers/pagination.helper'\r\nimport { useHistory } from 'react-router'\r\nimport { Modal } from './Modal'\r\n\r\nexport const Main: React.FC = () => {\r\n  const ITEMS_PER_PAGE = 20;\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [isClicked, setIsClicked] = useState<boolean>(false);\r\n  const [currentCoin, setCurrentCoin] = useState<CoinType>();\r\n  \r\n  const coinsCollection = useSelector<AppRootStateType, CoinType[]>(state => state.main.coinsCollection)\r\n\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const dataSource = coinsCollection.map(item => {\r\n    return {\r\n      key: item.id,\r\n      rank: item.rank,\r\n      name: item.name,\r\n      price: '$' + (+item.priceUsd).toFixed(2),\r\n      marketCap: '$' + transformationHelper(+item.marketCapUsd),\r\n      vwap: '$' + (+item.vwap24Hr).toFixed(2),\r\n      supply: transformationHelper(+item.supply),\r\n      volume: '$' + transformationHelper(+item.volumeUsd24Hr),\r\n      change: (+item.changePercent24Hr).toFixed(2) + '%',\r\n      symbol: item.symbol\r\n    }\r\n  })\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Rank',\r\n      dataIndex: 'rank',\r\n      key: 'rank',\r\n    },\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Price',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    },\r\n    {\r\n      title: 'Market Cap',\r\n      dataIndex: 'marketCap',\r\n      key: 'marketCap',\r\n    },\r\n    {\r\n      title: 'VWAP (24Hr)',\r\n      dataIndex: 'vwap',\r\n      key: 'vwap',\r\n    },\r\n    {\r\n      title: 'Supply',\r\n      dataIndex: 'supply',\r\n      key: 'supply',\r\n    },\r\n    {\r\n      title: 'Volume (24Hr)',\r\n      dataIndex: 'volume',\r\n      key: 'volume',\r\n    },\r\n    {\r\n      title: 'Change (24Hr)',\r\n      dataIndex: 'change',\r\n      key: 'change',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      key: 'action',\r\n      render: (a: any, record: any) => <Button key={record.key} onClick={() => toggle(record)}>+</Button>\r\n    },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    dispatch(getCoinsCollectionTC())\r\n    const timerId = setInterval(() => {\r\n      dispatch(getCoinsCollectionTC())\r\n    }, 7000)\r\n    return () => clearInterval(timerId)\r\n  }, [dispatch])\r\n\r\n  const reloadCollection = (newParams?: Partial<any>) => {\r\n    const params: any = { limit: ITEMS_PER_PAGE };\r\n\r\n    dispatch(getCoinsCollectionTC({ ...params, ...newParams }));\r\n  };\r\n\r\n  const onChangePage = (limit: number, offset: number, page: number) => {\r\n    setCurrentPage(page);\r\n    reloadCollection({ limit, offset });\r\n  };\r\n\r\n  const pagination = PaginationHelper.getListsPagination(\r\n    onChangePage,\r\n    ITEMS_PER_PAGE,\r\n    coinsCollection.length,\r\n    currentPage\r\n  );\r\n\r\n  const handleClick = (id: string) => {\r\n    localStorage.setItem('coinId', id)\r\n    history.push('/details')\r\n  }\r\n\r\n  const toggle = (coin?: CoinType) => {\r\n    setIsClicked(!isClicked)\r\n    setCurrentCoin(coin)\r\n  }\r\n\r\n  return (\r\n  <div className=\"main\">\r\n    <div className=\"app__container\">\r\n      <Table\r\n        className=\"main__table\"\r\n        columns={columns}\r\n        dataSource={dataSource}\r\n        pagination={pagination}\r\n        size=\"small\"\r\n        onRow={(record) => {\r\n          return {\r\n            onDoubleClick: () => handleClick(record.key)\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n    {(isClicked && currentCoin) && <Modal currentCoin={currentCoin} toggle={toggle} />}\r\n  </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Footer: React.FC = () => {\r\n  return (\r\n  <div className=\"footer\">\r\n    <div className=\"app__container\">\r\n      <a href=\"https://github.com/vsmaliakou\" target=\"_blank\" rel=\"noreferrer\">vsmaliakou</a>\r\n    </div>\r\n  </div>\r\n  )\r\n}","import { Dispatch } from \"redux\"\r\nimport { ThunkDispatch } from \"redux-thunk\"\r\nimport { coincapAPI, CoinType, DataPointsType } from \"../api/coincap-api\"\r\nimport { AppActionsType, AppRootStateType } from \"../store\"\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type DetailsActionType = ReturnType<typeof setCoinDetailsAC> | ReturnType<typeof setCoinPointsAC>\r\n\r\nlet initialState = {\r\n  coinDetails: {} as CoinType,\r\n  coinPoints: [] as DataPointsType[]\r\n}\r\n\r\nexport const detailsReducer = (state = initialState, action: DetailsActionType): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'COINCAP/SET-COIN-DETAILS': {\r\n      return {...state, coinDetails: action.data}\r\n    }\r\n    case 'COINCAP/SET-COIN-POINTS': {\r\n      return {...state, coinPoints: action.data}\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst setCoinDetailsAC = (data: CoinType) => ({type: 'COINCAP/SET-COIN-DETAILS', data} as const)\r\nconst setCoinPointsAC = (data: DataPointsType[]) => ({type: 'COINCAP/SET-COIN-POINTS', data} as const)\r\n\r\nconst getCoinPointsTC = (id: string) => (dispatch: Dispatch) => {\r\n  coincapAPI.getCoinPoints(id)\r\n    .then(resolve => {\r\n      dispatch(setCoinPointsAC(resolve.data.data))\r\n    })\r\n    .catch((e) => {\r\n      console.log(e)\r\n    })\r\n}\r\n\r\nexport const getCoinDetailsTC = (id: string) => (dispatch: ThunkDispatch<AppRootStateType, null, AppActionsType>) => {\r\n  coincapAPI.getCoinDetails(id)\r\n    .then(resolve => {      \r\n      dispatch(getCoinPointsTC(id))\r\n      dispatch(setCoinDetailsAC(resolve.data.data))\r\n    })\r\n    .catch((e) => {\r\n      console.log(e)\r\n    })\r\n}\r\n\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { DataPointsType } from '../api/coincap-api';\r\n\r\ntype PropsType = {\r\n  coinPoints: DataPointsType[]\r\n}\r\n\r\nexport const LineChart: React.FC<PropsType> = (props) => {\r\n  const { coinPoints } = props\r\n  const coinPrice = coinPoints.map(item => (+item.priceUsd).toFixed(2))\r\n  const data = {\r\n    labels: ['1am', '2am', '3am', '4am', '5am', '6am', '7am', '8am', '9am', '10am', '11am', '12am', '1pm', '2pm', '3pm', '4pm', '5pm', '6pm', '7pm', '8pm', '9pm', '10pm', '11pm', '12pm'],\r\n    datasets: [\r\n      {\r\n        label: '',\r\n        data: coinPrice.slice(coinPrice.length - 25, -1),\r\n        fill: false,\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Line data={data} />\r\n    </>\r\n  )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CoinType, DataPointsType } from '../api/coincap-api'\r\nimport { getCoinDetailsTC } from '../reducers/details-reducer'\r\nimport { AppRootStateType } from '../store'\r\nimport { transformationHelper } from './helpers/transformation.helper'\r\nimport { LineChart } from './LineChart'\r\nimport { Modal } from './Modal'\r\n\r\nexport const CoinDetails: React.FC = () => {\r\n  const [isClicked, setIsClicked] = useState<boolean>(false)\r\n  const coinId = localStorage.getItem('coinId')\r\n  const coinPoints = useSelector<AppRootStateType, DataPointsType[]>(state => state.details.coinPoints)\r\n  const details = useSelector<AppRootStateType, CoinType>(state => state.details.coinDetails)\r\n  const currentCoin = {\r\n    key: details.id,\r\n    rank: details.rank,\r\n    name: details.name,\r\n    price: '$' + (+details.priceUsd).toFixed(2),\r\n    marketCap: '$' + transformationHelper(+details.marketCapUsd),\r\n    vwap: '$' + (+details.vwap24Hr).toFixed(2),\r\n    supply: transformationHelper(+details.supply),\r\n    maxSupply: transformationHelper(+details.maxSupply),\r\n    volume: '$' + transformationHelper(+details.volumeUsd24Hr),\r\n    change: (+details.changePercent24Hr).toFixed(2) + '%',\r\n    symbol: details.symbol,\r\n    explorer: details.explorer\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (coinId) {\r\n      dispatch(getCoinDetailsTC(coinId))\r\n    }\r\n  }, [coinId, dispatch])\r\n\r\n  const toggle = () => {\r\n    setIsClicked(!isClicked)\r\n  }\r\n\r\n  return (\r\n    <div className=\"coin-details\">\r\n      <div className=\"app__container\">\r\n        <div className=\"coin-details__container\">\r\n          <div className=\"coin-details__description\">          \r\n            <div className=\"coin__name\">{currentCoin.name} ({currentCoin.symbol})</div>\r\n            <div>rank:<span>{currentCoin.rank}</span></div>\r\n            <div className=\"coin__description\">\r\n              <div>\r\n                <div>Price:<span>{currentCoin.price}</span></div>\r\n                <div>Market Cap:<span>{currentCoin.marketCap}</span></div>\r\n                <div>Supply:<span>{currentCoin.supply}</span></div>\r\n                <div>VWAP:<span>{currentCoin.vwap}</span></div>\r\n              </div>\r\n              <div>\r\n                <div>Change:<span>{currentCoin.change}</span></div>\r\n                <div>Volume (24Hr):<span>{currentCoin.volume}</span></div>\r\n                <div>Max Supply:<span>{currentCoin.maxSupply}</span></div>\r\n                <div><a href={currentCoin.explorer}>explorer</a></div>\r\n              </div>\r\n            </div>\r\n            <Button className=\"coin__add_btn\" onClick={toggle}>Add</Button>\r\n          </div>\r\n          <div className=\"coin-details__chart\">\r\n            <LineChart coinPoints={coinPoints} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {isClicked && <Modal currentCoin={currentCoin} toggle={toggle} />}\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport './assest/styles/index.scss';\nimport \"antd/dist/antd.css\";\nimport { Switch, Route } from 'react-router-dom'\nimport { Header } from './components/Header';\nimport { Main } from './components/Main';\nimport { Footer } from './components/Footer';\nimport { CoinDetails } from './components/CoinDetails';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Switch>\n        <Route exact path='/' render={() => <Main />}/>\n        <Route path='/details' render={() => <CoinDetails />}/>\n        <Route path='*' render={() => <div>404</div>}/>\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\"\r\nimport thunk from 'redux-thunk'\r\nimport { DetailsActionType, detailsReducer } from \"./reducers/details-reducer\"\r\nimport { MainActionType, mainReducer } from \"./reducers/main-reducer\"\r\nimport { PortfolioActionType, portfolioReducer } from \"./reducers/portfolio-reducer\"\r\n\r\nexport const rootReducer = combineReducers({\r\n  main: mainReducer,\r\n  details: detailsReducer,\r\n  portfolio: portfolioReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof store.getState>\r\n\r\nexport type AppActionsType = MainActionType | DetailsActionType | PortfolioActionType\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}